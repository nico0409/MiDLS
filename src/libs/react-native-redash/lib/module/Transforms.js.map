{"version":3,"sources":["Transforms.ts"],"names":["useAnimatedStyle","transformOrigin","transformations","x","y","translateX","translateY","transformOrigin2d","useTranslation","transform","value"],"mappings":"yEAEA,OAASA,gBAAT,KAAiC,yBAAjC,CAOA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAE7BC,eAF6B,CAGb,CAChB,UADgB,GAFdC,CAAAA,CAEc,MAFdA,CAEc,CAFXC,CAEW,MAFXA,CAEW,CAEhB,OACE,CAAEC,UAAU,CAAEF,CAAd,CADF,CAEE,CAAEG,UAAU,CAAEF,CAAd,CAFF,4BAGKF,eAHL,GAIE,CAAEG,UAAU,CAAE,CAACF,CAAf,CAJF,CAKE,CAAEG,UAAU,CAAE,CAACF,CAAf,CALF,GAOD,CAZM,CAcP,MAAO,IAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAE/BL,eAF+B,CAGd,CACjB,UADiB,GAFfC,CAAAA,CAEe,OAFfA,CAEe,CAFZC,CAEY,OAFZA,CAEY,CAEjB,OACE,CAAEC,UAAU,CAAEF,CAAd,CADF,CAEE,CAAEG,UAAU,CAAEF,CAAd,CAFF,4BAGKF,eAHL,GAIE,CAAEG,UAAU,CAAE,CAACF,CAAf,CAJF,CAKE,CAAEG,UAAU,CAAE,CAACF,CAAf,CALF,GAOD,CAZM,CAcP,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,WAC5BL,CAAAA,CAD4B,OAC5BA,CAD4B,CAE5BC,CAF4B,OAE5BA,CAF4B,OAI5BJ,CAAAA,gBAAgB,CAAC,iBAAO,CACtBS,SAAS,CAAE,CAAC,CAAEJ,UAAU,CAAEF,CAAC,CAACO,KAAhB,CAAD,CAA0B,CAAEJ,UAAU,CAAEF,CAAC,CAACM,KAAhB,CAA1B,CADW,CAAP,EAAD,CAJY,EAAvB","sourcesContent":["import type { TransformsStyle } from \"react-native\";\nimport type Animated from \"react-native-reanimated\";\nimport { useAnimatedStyle } from \"react-native-reanimated\";\n\nimport type { Vector } from \"./Vectors\";\nimport type { Transforms2d } from \"./Matrix3\";\n\ntype RNTransform = Exclude<TransformsStyle[\"transform\"], undefined>;\n\nexport const transformOrigin = (\n  { x, y }: Vector,\n  transformations: RNTransform\n): RNTransform => {\n  \"worklet\";\n  return [\n    { translateX: x },\n    { translateY: y },\n    ...transformations,\n    { translateX: -x },\n    { translateY: -y },\n  ];\n};\n\nexport const transformOrigin2d = (\n  { x, y }: Vector,\n  transformations: Transforms2d\n): Transforms2d => {\n  \"worklet\";\n  return [\n    { translateX: x },\n    { translateY: y },\n    ...transformations,\n    { translateX: -x },\n    { translateY: -y },\n  ];\n};\n\nexport const useTranslation = ({\n  x,\n  y,\n}: Vector<Animated.SharedValue<number>>) =>\n  useAnimatedStyle(() => ({\n    transform: [{ translateX: x.value }, { translateY: y.value }],\n  }));\n"]}